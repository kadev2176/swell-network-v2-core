# This is a basic workflow to help you get started with Actions

name: "Integration Test"

# Triggers the workflow on push or pull request events
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    name: "Run Integration Test"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Check out repository for latest tag
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: latest
      - name: Checkout to the latest tag
        run: |
          cd latest
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $latestTag
          cd .. && cp -r latest/contracts contracts/latest-tag
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Node module cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-v2-
      - name: Install dependencies
        run: npm ci
        if: steps.node-cache.outputs.cache-hit != 'true'
      - name: Hardhat artifact cache
        uses: actions/cache@v2
        id: hardhat-cache
        with:
          path: "artifacts"
          key: artifacts-${{ hashFiles('contracts/**/*.sol') }}
          restore-keys: |
            artifacts-
      - name: Hardhat compile
        run: npx hardhat compile
        if: steps.hardhat-cache.outputs.cache-hit != 'true'
      - name: Run Test
        uses: cypress-io/github-action@v2
        with:
          start: npx hardhat node --fork https://eth-mainnet.alchemyapi.io/v2/${{ env.ALCHEMY_API_KEY }}
          wait-on: "http://localhost:8545/"
          command: npm run coverage:inte
        env:
          PORT: 8545
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # pass the project ID from the secrets through environment variable
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
